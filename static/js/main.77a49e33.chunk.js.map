{"version":3,"sources":["components/expandedProductCard/ExpandedProductCard.tsx","components/expandedProductCard/styles.tsx","components/titleBar/TitleBar.tsx","components/titleBar/styles.tsx","components/productCard/ProductCard.tsx","components/productCard/styles.tsx","components/productGrid/ProductGrid.tsx","App.tsx","styles.tsx","serviceWorker.ts","index.tsx"],"names":["ExpandedProductCard","render","props","classes","product","closePulloverCallback","className","wrapper","Card","card","CardMedia","media","image","process","imageSrc","CardContent","content","Grid","container","direction","justify","alignItems","Typography","variant","name","KeyboardArrowUpOutlined","upArrow","onClick","String","price","color","inStock","ratingToStars","rating","description","stars","fill","join","React","Component","withStyles","theme","createStyles","display","width","height","position","top","margin","flexDirection","breakpoints","up","down","cursor","TitleBar","titleBox","ProductCard","cardRef","mediaRef","setCardRef","setMediaRef","tween","componentDidMount","TweenLite","from","y","autoAlpha","mouseOverTween","to","scale","opacity","mouseLeaveTween","flipId","ref","rolloverWrapper","onMouseEnter","onMouseLeave","handleClick","modalCallback","id","element","overflow","ProductGrid","products","flipKey","map","p","spring","key","App","state","data","filteredProducts","categories","categoryFilter","sortBy","selectedProductId","pulloverRef","pulloverTitleRef","pulloverSubtitleRef","pulloverEnterRef","setPulloverRef","setPulloverTitleRef","setPulloverSubtitleRef","setPulloverEnterRef","x","page","pullover","pulloverTitleGrid","pulloverEnter","pullUpPullover","pulloverProduct","filter","Container","maxWidth","toolbar","Button","handleReset","disabled","FormControl","formControl","InputLabel","htmlFor","Select","value","onChange","handleFilterChange","inputProps","category","i","MenuItem","button","handleSortByChange","openPullover","window","scrollY","screen","pullDownPullover","fromTo","productId","setState","event","target","sortProductsBy","sortField","freshFilter","sort","p1","p2","localeCompare","popularity","root","flexGrow","minWidth","zIndex","background","pulloverProductMedia","paddingTop","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.77a49e33.chunk.js","sourcesContent":["import React from 'react';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport { WithStyles } from '@material-ui/core';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport styles from './styles';\nimport { KeyboardArrowUpOutlined } from '@material-ui/icons';\n\ntype Props = {\n  product: Product,\n  closePulloverCallback: () => void\n} & WithStyles<typeof styles>\n\nclass ExpandedProductCard extends React.Component<Props> {\n  render = () => {\n    const {classes, product, closePulloverCallback} = this.props;\n\n    return (\n      <div className={classes.wrapper}>\n        <Card\n          className={classes.card}\n        >\n          <CardMedia\n            className={classes.media}\n            image={process.env.PUBLIC_URL + product.imageSrc}\n          />\n          <CardContent className={classes.content}>\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n              <Typography variant=\"h6\">\n                {product.name}\n              </Typography>\n              <KeyboardArrowUpOutlined className={classes.upArrow} onClick={closePulloverCallback} />\n            </Grid>\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n              <Typography variant=\"body1\">\n                {\"$\" + String(product.price)}\n              </Typography>\n              <Typography variant=\"body2\" color=\"error\">\n                {product.inStock ? \"\" : \"[out of stock]\"}\n              </Typography>\n              <Typography variant=\"body1\">\n                {this.ratingToStars(product.rating)}\n              </Typography>\n            </Grid>\n            <Typography variant=\"body2\">\n              {product.description}\n            </Typography>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  };\n\n  private ratingToStars = (rating: number) => {\n    const stars = ['☆', '☆', '☆', '☆', '☆'];\n    stars.fill('★', 0, rating);\n    return (stars.join(''));\n  };\n}\n\nexport default withStyles(styles)(ExpandedProductCard);\n","import { createStyles, Theme } from '@material-ui/core';\n\nexport default (theme: Theme) =>\n  createStyles({\n    wrapper: {\n      display: 'inline-block',\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      top: 0\n    },\n    card: {\n      width: '90%',\n      height: '90%',\n      margin: '5%',\n      display: 'flex',\n      flexDirection: 'column',\n      [theme.breakpoints.up('lg')]: {\n        flexDirection: 'row',\n      }\n    },\n    media: {\n      height: '100%',\n      width: '80%',\n      [theme.breakpoints.down('lg')]: {\n        width: '100%',\n      },\n    },\n    content: {\n      width: 'inherit',\n      [theme.breakpoints.up('lg')]: {\n        width: '30vw',\n      },\n    },\n    upArrow: {\n      cursor: 'pointer',\n      height: '1.5em',\n      width: '1.5em',\n    },\n});\n","import { withStyles, WithStyles } from '@material-ui/core';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport styles from './styles';\n\nclass TitleBar extends React.Component<WithStyles<typeof styles>> {\n  render = () => {\n    const { classes } = this.props;\n    return (\n      <Grid container className={classes.titleBox} alignItems=\"baseline\" justify=\"space-between\">\n        <Typography variant=\"h3\">\n          yard sale.\n        </Typography>\n        <Typography variant=\"h6\">\n          please buy my stuff.\n        </Typography>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(TitleBar)","import { createStyles, Theme } from '@material-ui/core';\n\nexport default (theme: Theme) =>\n  createStyles({\n    titleBox: {\n      display: 'flex',\n    }\n  });\n","import React from 'react';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\n\nimport { WithStyles } from '@material-ui/core';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from './styles';\n\nimport { TweenLite } from 'gsap';\nimport Grid from '@material-ui/core/Grid';\nimport { Flipped } from 'react-flip-toolkit/lib';\n\ntype Props = {\n  product: Product,\n  modalCallback: (productId: number) => void\n} & WithStyles<typeof styles>\n\nclass ProductCard extends React.Component<Props> {\n  cardRef: HTMLElement | null;\n  mediaRef: HTMLElement | null;\n  setCardRef: any;\n  setMediaRef: any;\n  tween: ReturnType<typeof TweenLite.to> | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.cardRef = null;\n    this.mediaRef = null;\n    this.setCardRef = (element: HTMLElement) => {\n      this.cardRef = element;\n    };\n    this.setMediaRef = (element: HTMLElement) => {\n      this.mediaRef = element;\n    };\n    this.tween = null;\n  };\n\n  componentDidMount = () => {\n    this.tween = TweenLite.from(\n      this.cardRef, 0.3,\n      {y: 30, autoAlpha: 0}\n    );\n  };\n\n  mouseOverTween = () => {\n    this.tween = TweenLite.to(\n      this.mediaRef, 0.3,\n      {scale: 1.1, opacity: 1},\n    );\n  };\n\n  mouseLeaveTween = () => {\n    this.tween = TweenLite.to(\n      this.mediaRef, 0.3,\n      {scale: 1.0, opacity: 0.85}\n    );\n  };\n\n  render = () => {\n    const {classes, product} = this.props;\n\n    return (\n      <Flipped flipId={product.name}>\n        <div className={classes.wrapper}>\n          <Card\n            className={classes.card}\n            ref={this.setCardRef}\n          >\n            <div className={classes.rolloverWrapper}\n                 onMouseEnter={this.mouseOverTween}\n                 onMouseLeave={this.mouseLeaveTween}\n                 onClick={this.handleClick}\n            >\n              <CardMedia\n                className={classes.media}\n                ref={this.setMediaRef}\n                image={process.env.PUBLIC_URL + product.imageSrc}\n              />\n            </div>\n            <CardContent>\n              <Typography variant=\"h6\">\n                {product.name}\n              </Typography>\n              <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                <Typography variant=\"body1\">\n                  {\"$\" + String(product.price)}\n                </Typography>\n                <Typography variant=\"body2\" color=\"error\">\n                  {product.inStock ? \"\" : \"[out of stock]\"}\n                </Typography>\n                <Typography variant=\"body1\">\n                  {this.ratingToStars(product.rating)}\n                </Typography>\n              </Grid>\n            </CardContent>\n          </Card>\n        </div>\n      </Flipped>\n    )\n  };\n\n  private handleClick = () => {\n    const {product, modalCallback} = this.props;\n    modalCallback(product.id);\n  };\n\n  private ratingToStars = (rating: number) => {\n    const stars = ['☆', '☆', '☆', '☆', '☆'];\n    stars.fill('★', 0, rating);\n    return (stars.join(''));\n  };\n}\n\nexport default withStyles(styles)(ProductCard);\n","import { createStyles, Theme } from '@material-ui/core';\n\nexport default (theme: Theme) =>\n  createStyles({\n    wrapper: {\n      display: 'inline-block'\n    },\n    card: {\n      width: 300,\n      height: 422,\n      margin: 16,\n    },\n    media: {\n      height: 300,\n      width: 300,\n      opacity: 0.85\n    },\n    rolloverWrapper: {\n      overflow: 'hidden',\n      cursor: 'pointer'\n    }\n});\n","import React from 'react';\nimport { Flipper } from 'react-flip-toolkit/lib';\n\nimport ProductCard from '../productCard/ProductCard';\n\ntype Props = {\n  products: Product[],\n  modalCallback: (productId: number) => void\n}\n\nclass ProductGrid extends React.Component<Props> {\n  render = () => {\n    const { products, modalCallback } = this.props;\n    return (\n      <Flipper className={'productGrid'} flipKey={products.map(p => p.id).join('')} spring='stiff'>\n        {products.map(product =>\n            <ProductCard product={product} key={product.name} modalCallback={modalCallback} />\n        )}\n      </Flipper>\n    );\n  };\n}\n\nexport default ProductGrid;\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { TweenLite } from 'gsap';\nimport ExpandedProductCard from './components/expandedProductCard/ExpandedProductCard';\nimport { Container } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport styles from './styles';\nimport withStyles, { WithStyles } from '@material-ui/core/styles/withStyles';\n\nimport TitleBar from './components/titleBar/TitleBar';\nimport ProductGrid from './components/productGrid/ProductGrid';\n\nimport data from './data.json';\n\ntype Category = string;\n\ntype State = {\n  products: Product[];\n  filteredProducts: Product[];\n  categories: Category[];\n  categoryFilter: string;\n  sortBy: string;\n  selectedProductId: number;\n}\n\nclass App extends React.Component<WithStyles<typeof styles>, State> {\n  state = {\n    products: data.products,\n    filteredProducts: data.products,\n    categories: data.categories,\n    categoryFilter: \"\",\n    sortBy: \"\",\n    selectedProductId: 0\n  };\n\n  private pulloverRef: HTMLElement | null = null;\n  private pulloverTitleRef: HTMLElement | null = null;\n  private pulloverSubtitleRef: HTMLElement | null = null;\n  private pulloverEnterRef: HTMLElement | null = null;\n  private tween: ReturnType<typeof TweenLite.to> | null = null;\n\n  private setPulloverRef = (element: HTMLElement | null) => {\n    this.pulloverRef = element;\n  };\n\n  private setPulloverTitleRef = (element: HTMLElement) => {\n    this.pulloverTitleRef = element;\n  };\n\n  private setPulloverSubtitleRef = (element: HTMLElement) => {\n    this.pulloverSubtitleRef = element;\n  };\n\n  private setPulloverEnterRef = (element: HTMLElement) => {\n    this.pulloverEnterRef = element;\n  };\n\n  componentDidMount = () => {\n    this.tween = TweenLite.from(\n      this.pulloverTitleRef, 1.2,\n      {y: 40, autoAlpha: 0}\n    );\n    this.tween = TweenLite.from(\n      this.pulloverSubtitleRef, 1.7,\n      {x: 60, autoAlpha: 0}\n    );\n\n    this.tween = TweenLite.from(\n      this.pulloverEnterRef, 2,\n      {x: -60, autoAlpha: 0}\n    );\n  };\n\n  render = () => {\n    const {classes} = this.props;\n    const {filteredProducts, categories, categoryFilter, sortBy, selectedProductId} = this.state;\n\n    return (\n      <div className={classes.page}>\n        <div className={classes.pullover} ref={this.setPulloverRef}>\n          {!selectedProductId &&\n          <>\n            <Grid container direction='column' className={classes.pulloverTitleGrid}>\n              <Typography variant='h1' ref={this.setPulloverTitleRef}>\n                yard sale.\n              </Typography>\n              <Typography variant='h4' ref={this.setPulloverSubtitleRef}>\n                please. buy my stuff.\n              </Typography>\n              <Typography className={classes.pulloverEnter} variant='body1' color='primary' onClick={this.pullUpPullover} ref={this.setPulloverEnterRef}>\n                come on over.\n              </Typography>\n            </Grid>\n          </>\n          }\n          {selectedProductId > 0 &&\n          <div className={classes.pulloverProduct}>\n            <ExpandedProductCard\n              product={filteredProducts.filter(p => p.id === selectedProductId)[0]}\n              closePulloverCallback={this.pullUpPullover}\n            />\n          </div>\n          }\n        </div>\n        <Container className={classes.container} maxWidth={'xl'}>\n          <TitleBar />\n          <Grid container className={classes.toolbar} justify=\"flex-end\" alignItems=\"flex-end\">\n            <Button onClick={this.handleReset} disabled={!(sortBy || categoryFilter)}>reset</Button>\n            <div>\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"category-filter\">category</InputLabel>\n                <Select\n                  value={categoryFilter}\n                  onChange={this.handleFilterChange}\n                  inputProps={{\n                    name: 'category',\n                    id: 'category-filter',\n                  }}\n                >\n                  {categories.map((category, i) => (\n                    <MenuItem key={i} value={category} button={true}>{category}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"sort-by\">sort by</InputLabel>\n                <Select\n                  value={sortBy}\n                  onChange={this.handleSortByChange}\n                  inputProps={{\n                    name: 'sortBy',\n                    id: 'sort-by',\n                  }}\n                >\n                  <MenuItem value=\"name\" button={true}>name</MenuItem>\n                  <MenuItem value=\"price-lth\" button={true}>price: low to high</MenuItem>\n                  <MenuItem value=\"price-htl\" button={true}>price: high to low</MenuItem>\n                  <MenuItem value=\"rating\" button={true}>highest rating</MenuItem>\n                  <MenuItem value=\"popularity\" button={true}>most popular</MenuItem>\n                </Select>\n              </FormControl>\n            </div>\n          </Grid>\n          <ProductGrid products={filteredProducts} modalCallback={this.openPullover} />\n        </Container>\n      </div>\n    );\n  };\n\n  private pullUpPullover = () => {\n    this.tween = TweenLite.to(\n      this.pulloverRef, 0.5,\n      {y: window.scrollY - window.screen.height, display: 'none'}\n    );\n  };\n\n  private pullDownPullover = () => {\n    this.tween = TweenLite.fromTo(\n      this.pulloverRef,\n      0.5,\n      {y: window.scrollY - window.screen.height},\n      {y: window.scrollY, display: 'block'}\n    );\n  };\n\n  private openPullover = (productId: number) => {\n    this.setState({selectedProductId: productId});\n    this.pullDownPullover();\n  };\n\n  private handleFilterChange = (event: React.ChangeEvent<any>) => {\n    const {products, sortBy} = this.state;\n    this.setState({\n      categoryFilter: event.target.value,\n      filteredProducts: this.sortProductsBy(products.filter(product => product.category === event.target.value), sortBy),\n      selectedProductId: 0\n    });\n  };\n\n  private handleSortByChange = (event: React.ChangeEvent<any>) => {\n    const {filteredProducts} = this.state;\n    const sortField: string = event.target.value;\n\n    const freshFilter: Product[] = this.sortProductsBy(filteredProducts, sortField);\n    this.setState({\n      sortBy: sortField,\n      filteredProducts: freshFilter\n    });\n  };\n\n  private sortProductsBy = (products: Product[], key: string) => {\n    switch (key) {\n      case \"name\":\n        return products.sort((p1, p2) => p1.name.localeCompare(p2.name));\n      case \"price-lth\":\n        return products.sort((p1, p2) => p1.price - p2.price);\n      case \"price-htl\":\n        return products.sort((p1, p2) => p2.price - p1.price);\n      case \"rating\":\n        return products.sort((p1, p2) => p2.rating - p1.rating);\n      case \"popularity\":\n        return products.sort((p1, p2) => p2.popularity - p1.popularity);\n      default:\n        return products;\n    }\n  };\n\n  private handleReset = (event: any) => {\n    const {products} = this.state;\n    this.setState({\n      filteredProducts: products.sort((p1: Product, p2: Product) => p1.id - p2.id),\n      categoryFilter: \"\",\n      sortBy: \"\"\n    })\n  };\n}\n\nexport default withStyles(styles)(App);\n","import { createStyles, Theme } from '@material-ui/core';\n\nexport default (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    formControl: {\n      minWidth: 120,\n    },\n    toolbar: {\n      margin: '32px 0',\n    },\n    page: {},\n    pullover: {\n      position: 'absolute',\n      top: 0,\n      height: '100vh',\n      width: '100vw',\n      zIndex: 20,\n      background: 'white'\n    },\n    pulloverTitleGrid: {\n      margin: '10vw auto',\n      width: '50vw'\n    },\n    pulloverEnter: {\n      cursor: 'pointer'\n    },\n    pulloverProduct: {\n      width: '100%',\n      height: '100%'\n    },\n    pulloverProductMedia: {\n      height: '75vh'\n    },\n    container: {\n      paddingTop: 32\n    }\n  });\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}